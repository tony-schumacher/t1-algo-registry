apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -o ./kubernetes/
    kompose.image-pull-secret: tlv-docker
    kompose.version: 1.32.0 (765fde254)
  labels:
    io.kompose.service: transformer-v1-tm
  name: transformer-v1-tm
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: transformer-v1-tm
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -o ./kubernetes/
        kompose.image-pull-secret: tlv-docker
        kompose.version: 1.32.0 (765fde254)
      labels:
        io.kompose.network/transformer-v1-default: "true"
        io.kompose.service: transformer-v1-tm
    spec:
      containers:
        - env:
            - name: DEPLOYMENT
              valueFrom:
                configMapKeyRef:
                  key: DEPLOYMENT
                  name: env
            - name: EURO_WIND_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: EURO_WIND_PASSWORD
                  name: env
            - name: GOOGLE_APPLICATION_CREDENTIALS_JSON
              valueFrom:
                configMapKeyRef:
                  key: GOOGLE_APPLICATION_CREDENTIALS_JSON
                  name: env
            - name: KEYFILE_JSON
              valueFrom:
                configMapKeyRef:
                  key: KEYFILE_JSON
                  name: env
            - name: MONGODB_URI
              valueFrom:
                configMapKeyRef:
                  key: MONGODB_URI
                  name: env
            - name: NODE_ENV
              valueFrom:
                configMapKeyRef:
                  key: NODE_ENV
                  name: env
            - name: PYTHONPATH
              valueFrom:
                configMapKeyRef:
                  key: PYTHONPATH
                  name: env
            - name: STAGE
              valueFrom:
                configMapKeyRef:
                  key: STAGE
                  name: env
            - name: WANDB_MODE
              valueFrom:
                configMapKeyRef:
                  key: WANDB_MODE
                  name: env
            - name: authVerificationCode
              valueFrom:
                configMapKeyRef:
                  key: authVerificationCode
                  name: env
            - name: certPassword
              valueFrom:
                configMapKeyRef:
                  key: certPassword
                  name: env
            - name: kafkaHost
              valueFrom:
                configMapKeyRef:
                  key: kafkaHost
                  name: env
            - name: kafkaPassword
              valueFrom:
                configMapKeyRef:
                  key: kafkaPassword
                  name: env
            - name: kafkaPort
              valueFrom:
                configMapKeyRef:
                  key: kafkaPort
                  name: env
            - name: kafkaUri
              valueFrom:
                configMapKeyRef:
                  key: kafkaUri
                  name: env
            - name: kafkaUseLocal
              valueFrom:
                configMapKeyRef:
                  key: kafkaUseLocal
                  name: env
            - name: kafkaUsername
              valueFrom:
                configMapKeyRef:
                  key: kafkaUsername
                  name: env
            - name: m7_url
              valueFrom:
                configMapKeyRef:
                  key: m7_url
                  name: env
            - name: nasdaq
              valueFrom:
                configMapKeyRef:
                  key: nasdaq
                  name: env
            - name: password
              valueFrom:
                configMapKeyRef:
                  key: password
                  name: env
            - name: portfolioIds
              value: '["intraday-spread-slow","intraday-spread-100MW","intraday-spread-fast-small","intraday-spread-50MW","intraday-spread-single-trade"]'
            - name: securityToken_tso
              valueFrom:
                configMapKeyRef:
                  key: securityToken_tso
                  name: env
            - name: space_key_secret
              valueFrom:
                configMapKeyRef:
                  key: space_key_secret
                  name: env
            - name: spaces_key
              valueFrom:
                configMapKeyRef:
                  key: spaces_key
                  name: env
            - name: t1ModelDomain
              value: http://transformer-v1-api:8080
            - name: userName
              valueFrom:
                configMapKeyRef:
                  key: userName
                  name: env
          image: teclead/t1-m7:transformerV0.4.7
          livenessProbe:
            exec:
              command:
                - curl -f http://localhost:7001 || exit 1
            failureThreshold: 5
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 2
          name: transformer-v1-tm
          ports:
            - containerPort: 7001
              hostPort: 7001
              protocol: TCP
      imagePullSecrets:
        - name: tlv-docker
      restartPolicy: Always
